<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ MIT License
 ~
 ~ Copyright (c) 2021 Aliaksandr Leanovich
 ~
 ~ Permission is hereby granted, free of charge, to any person obtaining a copy
 ~ of this software and associated documentation files (the "Software"), to deal
 ~ in the Software without restriction, including without limitation the rights
 ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 ~ copies of the Software, and to permit persons to whom the Software is
 ~ furnished to do so, subject to the following conditions:
 ~
 ~ The above copyright notice and this permission notice shall be included in all
 ~ copies or substantial portions of the Software.
 ~
 ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ~ FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
 ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 ~ WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR
 ~ IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-->
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="by.leonovich.hibernatecrm.mappings.singletable">
    <class name="Person" table="T_PERSON" discriminator-value="P">
        <comment>
            SINGLE TABLE or TABLE PER CLASS HIERARCHY.
            Single table will be created for all hierarchy of classes
            with all set of fields from every class in a single table.
        </comment>
        <id name="id" type="java.lang.Long" column="F_ID">
            <generator class="increment"/>
        </id>
        <discriminator column="TYPE"/>
        <property name="name" column="F_NAME" type="string"/>
        <property name="surname" column="F_SURNAME" type="string"/>
        <property name="age" column="F_AGE" type="int"/>
        <one-to-one name="phoneNumber" cascade="all" class="PhoneNumber"/>

        <component name="homeAddress" class="Address">
            <meta attribute="description">
                Component - contained object, which persisted in database as a parameter, not as a separate entity
            </meta>
            <property name="country" column="F_COUNTRY"/>
            <property name="countryCode" column="F_CODE"/>
            <property name="city" column="F_CITY"/>
            <property name="street" column="F_STREET"/>
            <property name="buildingNumber" column="F_BUILDING"/>
            <property name="postIndex" formula="concat(F_CODE, '_', F_COUNTRY)" type="java.lang.String" access="property">
                <meta attribute="description">Not a column in database, but calculated by hibernate value</meta>
            </property>
        </component>

        <subclass name="Employee" discriminator-value="E">
            <property name="company" column="F_COMPANY"/>
            <property name="salary" column="F_SALARY" type="big_decimal" precision="19" scale="4"/>
            <set name="meetings" table="T_EMPLOYEE_MEETING" inverse="true" cascade="save-update" lazy="true" fetch="select">
                <key column="F_EMPLOYEE_ID"/>
                <many-to-many column="F_MEETING_ID" class="Meeting"/>
            </set>
        </subclass>

        <subclass name="Student" discriminator-value="S">
            <property name="faculty" column="F_FACULTY"/>
            <property name="mark" column="F_MARK"/>
            <many-to-one name="university" class="University" lazy="false" fetch="select" column="F_UNIVERSITY_ID" cascade="save-update"/>
        </subclass>
    </class>
</hibernate-mapping>